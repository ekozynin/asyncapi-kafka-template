asyncapi: '2.1.0'
info:
  title: Confluent Kafka Example
  version: '0.0.1'
  description: |
    An example of Kafka topology using AsyncApi

servers:
  $ref: './servers.yaml'

channels:
  example-channel:
    x-messageCompatibility: 'FULL' # https://docs.confluent.io/platform/current/schema-registry/avro.html#schema-evolution-and-compatibility
    x-message:
      $ref: '#/components/messages/ExampleMessage'
    bindings:
      kafka:
        x-partitions: 9
        x-replicas: 1
        x-configs:
          cleanup.policy: compact
          delete.retention.ms: 0
          confluent.value.schema.validation: 'true'

components:
  messages:
    ExampleMessage:
      title: Example Message
      summary: This message has a reference to another schema
      schemaFormat: application/vnd.apache.avro;version=1.9.0
      payload:
        $ref: '../schemas/ExampleMessage.avsc'
      x-schemaReferences:
        - another.AnotherMessage

    AnotherMessage:
      schemaFormat: application/vnd.apache.avro+yaml;version=1.9.0
      payload:
        $ref: './schema/AnotherMessage.avsc'

  securitySchemes:
    confluentBroker:
      type: userPassword
      x-configs:
        security.protocol: sasl_ssl
        sasl.mechanisms: PLAIN
        sasl.username: '{{ CLUSTER_API_KEY }}'
        sasl.password: '{{ CLUSTER_API_SECRET }}'

    confluentSchemaRegistry:
      type: userPassword
      x-configs:
        basic.auth.user.info: '{{ SCHEMA_REGISTRY_API_KEY }}:{{ SCHEMA_REGISTRY_API_SECRET }}'
